<%= open_graph_tags component: Developers::OpenGraphTagsComponent, developer: @developer %>

<div class="max-w-5xl mx-auto mt-0 lg:mt-16 pb-8 mb-16 bg-white shadow lg:rounded-lg overflow-hidden">
  <%= render Developers::CoverImageComponent.new(developer: @developer, classes: "lg:rounded-t-lg") %>

  <div class="relative z-10 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5">
      <%= render AvatarComponent.new(avatarable: @developer, variant: :medium) %>
    </div>
  </div>

  <div class="flex-1">
    <div class="pt-6 pb-8 xl:pb-10">
      <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 lg:max-w-5xl lg:grid lg:grid-cols-3">
        <div class="lg:col-span-2 lg:pr-8 lg:border-r lg:border-gray-200">
          <div>
            <div>
              <div class="md:flex md:items-start md:justify-between md:space-x-4 lg:border-b lg:pb-6">
                <div class="w-full">
                  <h1 class="text-2xl font-bold text-gray-900"><%= @developer.hero %></h1>
                  <%= render Users::PaywalledComponent.new(user: current_user, paywalled: @developer, size: :small) do %>
                    <div class="mt-2 flex items-center text-sm font-medium text-gray-500">
                      <%= inline_svg_tag "icons/solid/user.svg", class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" %>
                      <%= @developer.name %>
                    </div>
                  <% end %>
                </div>

                <%= render Developers::PrimaryActionComponent.new(user: current_user, developer: @developer, business: current_user&.business) %>
              </div>

              <aside class="mt-8 lg:hidden">
                <%= render "details", developer: @developer %>
              </aside>

              <div class="mt-6">
                <% @developer.skills["skills_frontend"].to_a.each do |skill| %>
                  <li class="inline-block md:text-sm">
                    <div class="block bg-gray-100 px-2 py-1 text-xs md:px-2 md:py-1 rounded-xl text-gray-700 hover:text-black hover:bg-blue-200">
                      <span class="text-sm font-medium"><%= Developer.skills_frontend[skill.to_sym] %></span>
                    </div>
                  </li>
                <% end %>
                <% @developer.skills["skills_backend"].to_a.each do |skill| %>
                  <li class="inline-block md:text-sm">
                    <div class="block bg-gray-100 px-2 py-1 text-xs md:px-2 md:py-1 rounded-xl text-gray-700 hover:text-black hover:bg-blue-200">
                      <span class="text-sm font-medium"><%= Developer.skills_backend[skill.to_sym]  %></span>
                    </div>
                  </li>
                <% end %>
                <% @developer.skills["skills_language"].to_a.each do |skill| %>
                  <li class="inline-block md:text-sm">
                    <div class="block bg-gray-100 px-2 py-1 text-xs md:px-2 md:py-1 rounded-xl text-gray-700 hover:text-black hover:bg-blue-200">
                      <span class="text-sm font-medium"><%= Developer.skills_language[skill.to_sym]  %></span>
                    </div>
                  </li>
                <% end %>
              </div>

              <div class="py-3 lg:pt-6 lg:pb-0">
                <h2 class="sr-only"><%= t(".description") %></h2>
                <div class="prose max-w-prose">
                  <%= simple_format(strip_tags(@developer.bio)) %>
                </div>
              </div>
            </div>
          </div>
        </div>

        <aside class="hidden lg:block lg:pl-8">
          <%= render "details", developer: @developer %>
        </aside>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
// Select all checkboxes with the name 'settings' using querySelectorAll.
var checkboxes = document.querySelectorAll("input[type=checkbox]");
let enabledSettings = []

// Use Array.forEach to add an event listener to each checkbox.
checkboxes.forEach(function(checkbox) {
  checkbox.addEventListener('change', function() {
    enabledSettings = 
      Array.from(checkboxes) // Convert checkboxes to an array to use filter and map.
      .filter(i => i.checked) // Use Array.filter to remove unchecked checkboxes.
      .map(i => i.value) // Use Array.map to extract only the checkbox values from the array of objects.
      
    document.getElementsByName('commit')[0].click()
  })
});
</script>
